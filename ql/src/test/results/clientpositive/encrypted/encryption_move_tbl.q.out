PREHOOK: query: DROP TABLE IF EXISTS encrypted_table PURGE
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS encrypted_table PURGE
POSTHOOK: type: DROPTABLE
#### A masked pattern was here ####
PREHOOK: type: CREATETABLE
#### A masked pattern was here ####
PREHOOK: Output: database:default
PREHOOK: Output: default@encrypted_table
#### A masked pattern was here ####
POSTHOOK: type: CREATETABLE
#### A masked pattern was here ####
POSTHOOK: Output: database:default
POSTHOOK: Output: default@encrypted_table
Encryption key created: 'key_128'
Encryption zone created: '/build/ql/test/data/warehouse/default/encrypted_table' using key: 'key_128'
PREHOOK: query: INSERT OVERWRITE TABLE encrypted_table SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@encrypted_table
POSTHOOK: query: INSERT OVERWRITE TABLE encrypted_table SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@encrypted_table
POSTHOOK: Lineage: encrypted_table.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: encrypted_table.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
encrypted_table
src
PREHOOK: query: ALTER TABLE default.encrypted_table RENAME TO default.plain_table
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: default@encrypted_table
PREHOOK: Output: default@encrypted_table
POSTHOOK: query: ALTER TABLE default.encrypted_table RENAME TO default.plain_table
POSTHOOK: type: ALTERTABLE_RENAME
POSTHOOK: Input: default@encrypted_table
POSTHOOK: Output: default@encrypted_table
POSTHOOK: Output: default@plain_table
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
plain_table
src
PREHOOK: query: DROP TABLE encrypted_table PURGE
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE encrypted_table PURGE
POSTHOOK: type: DROPTABLE
